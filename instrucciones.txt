3. crear directorio src incluir index.js con el contenido

function component() {
  let element = document.createElement('div');

  // Lodash, currently included via a script, is required for this line to work
  element.innerHTML = _.join(['Hello', 'webpack'], ' ');

  return element;
}

document.body.appendChild(component());

4. crear index.html con el contenido

<!doctype html>
<html>
  <head>
    <title>Getting Started</title>
  </head>
  <body>
    
  </body>
</html>

editar el package.json e incluir

"private":true,


6. importamos lodash en nuestro inex.js
import _ from 'lodash';



9. para evitar el uso de comandos cli creamos un fichero
webpack.config.js en raiz

10. incorporamos reglas al package.json

"build":"webpack" dentro de scripts

11. para ejecutar el proyecto cambiamos el comando anterior npx proyecto
npm run build

hasta aqui estaria estable el proyecto
=========================================






14. en el index.js le añadimos la clase y el css

import './style.css';


===========================================

manejo de imagenes


16: Añadimos este trozo de codigo en el webpack.config.js

{
+         test: /\.(png|svg|jpg|gif)$/,
+         use: [
+           'file-loader'
+         ]
+       }




===========================================

manejo de fuentes

{
+         test: /\.(png|svg|jpg|gif)$/,
+         use: [
+           'file-loader'
+         ]
+       }


===========================================

manejo de ficheros xml y css los json estan integrados en webpack



=============================================

plugin para generar un html

en webpack.config.js


const HtmlWebpackPlugin = require('html-webpack-plugin');

plugins: [
+     new HtmlWebpackPlugin({
+       title: 'Output Management'
+     })
+   ],


=============================================

limpiar la carpeta dist



const CleanWebpackPlugin = require('clean-webpack-plugin');

en la seccion de plugins

new CleanWebpackPlugin(['dist']),


===============================================

modo watch

en scripts dentro package.json

"watch": "webpack --watch",

===============================================

recarga en vivo

devServer: {
        contentBase: './dist'
    }

================================================



===============================================


minificar y optimizar


==============================================

actualizar version package.json al compilar en proyecto


